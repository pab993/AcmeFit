
package services;

import javax.transaction.Transactional;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.test.context.ContextConfiguration;
import org.springframework.test.context.junit4.SpringJUnit4ClassRunner;

import utilities.AbstractTest;
import domain.Curriculum;

@Transactional
@ContextConfiguration(locations = {
	"classpath:spring/junit.xml"
})
@RunWith(SpringJUnit4ClassRunner.class)
public class CurriculumServiceTest extends AbstractTest {

	// The SUT
	// ====================================================

	@Autowired
	private CurriculumService	curriculumService;


	// Tests
	// ====================================================

	/*
	 * 
	 *
	 */

	public void correctCurriculumTest(final String username, final Curriculum curriculum, final Class<?> expected) {

		Class<?> caught = null;

		try {

			this.authenticate(username);

			this.curriculumService.save(curriculum);

			this.unauthenticate();

		} catch (Throwable oops) {

			caught = oops.getClass();

		}

		this.checkExceptions(expected, caught);

	}

	//Drivers
	// ===================================================

	@Test
	public void driverCorrectCurriculumTest() {
		Curriculum curriculum = this.curriculumService.findOne(101);
		Curriculum curriculum2 = this.curriculumService.findOne(102);
		Curriculum curriculum3 = curriculum2;
		Curriculum curriculum4 = curriculum2;
		curriculum2.setPhotograph("Esto es un error");
		curriculum3.setAcademicFormation(null);
		curriculum4.setExperience(null);

		final Object testingData[][] = {
			// Un curriculum válido -> true
			{
				"trainer1", curriculum, null
			},
			// Un curriculum con una imagen que no es una imagen válida -> false
			{
				"nutritionist1", curriculum2, IllegalArgumentException.class
			},
		// Un curriculum con su formación academica vacía
		//			{
		//				"nutritionist1", curriculum3, IllegalArgumentException.class
		//			},
		//			// Un curriculum con su experiencia vacía
		//			{
		//				"nutritionist1", curriculum4, IllegalArgumentException.class
		//			}

		};
		for (int i = 0; i < testingData.length; i++)
			this.correctCurriculumTest((String) testingData[i][0], (Curriculum) testingData[i][1], (Class<?>) testingData[i][2]);
	}

}
